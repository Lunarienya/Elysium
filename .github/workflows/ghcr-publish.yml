name: GHCR Image

on:
  push:
    # Remove 'tags:' to trigger on every push to any branch
    # branches: # Optional: if you only want it on specific branches, e.g., main
    #   - main
  workflow_dispatch:
jobs:
  push_to_registry:
    name: Push OCI image to GitHub Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v20
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            extra-platforms = aarch64-linux

      - uses: docker/setup-qemu-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/elysium
          tags: |
            type=raw,value=latest # Always push 'latest' on every push
            # type=sha,enable=true,prefix= # Optional: tag with short SHA on every push
            # You might want to remove semver tags here if you're not pushing a version release
            # type=semver,pattern={{version}}
            # type=semver,pattern={{major}}.{{minor}}
            # type=semver,pattern={{major}}


      - name: Build and push OCI image
        env:
          REFERENCES: ${{ steps.meta.outputs.tags }}
          GHCR_USERNAME: ${{ github.actor }}
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$GHCR_TOKEN" | buildah login -u "$GHCR_USERNAME" --password-stdin ghcr.io

          buildah manifest create elysium-manifest

          for system in 'x86_64-linux' 'aarch64-linux'; do
            oci_archive="$(nix build --no-link --print-out-paths ".#oci-cross-$system")"
            buildah manifest add elysium-manifest "docker-archive:$oci_archive"
          done

          for reference in $REFERENCES; do
            buildah manifest push --all -f v2s2 elysium-manifest "docker://ghcr.io/Lunarienya/Elysium:$reference"
          done
